name: Release Build

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-go:
    name: Build Go Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: freebsd
            goarch: amd64
          - goos: freebsd
            goarch: arm64
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build Go binary
        working-directory: go
        run: |
          mkdir -p ../dist
          ext=""
          [[ "${{ matrix.goos }}" == "windows" ]] && ext=".exe"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 go build -o "../dist/slice-${{ matrix.goos }}-${{ matrix.goarch }}$ext" .

      - name: Upload Go binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-c-macos:
    name: Build C binary (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build C binary
        working-directory: c
        run: |
          mkdir -p ../dist
          clang -O2 slice.c -o ../dist/slice-darwin-c

      - name: Upload C binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
